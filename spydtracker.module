<?php
/**
 * @file
 * Module file for the spydtracker module.
 */

/**
 * This function tries to track the package and return the results
 */
function spydtracker_track_cp($num, $internal = FALSE) {
  $url = 'http://www.canadapost.ca/cpotools/apps/track/personal/findByTrackNumber?trackingNumber=';
  $usps_url = 'http://trkcnfrm1.smi.usps.com/PTSInternetWeb/InterLabelInquiry.do?origTrackNum=';
  $singapore_url = "http://www.speedpost.com.sg/TrackAndTrace.asp?itemnos=";
  $china_url = "http://www.ems.com.cn/qcgzOutQueryNewAction.do?reqCode=gotoSearchE&mailNum=";
  $tiawan_url = "http://postserv.post.gov.tw/webpost/CSController?cmd=POS4005_1&mailno=";
  $universal_url = "http://trackthepack.com/track/";
  $hongkong_url = "http://app3.hongkongpost.com/CGI/mt/e_detail.jsp?mail_type=ems_out&tracknbr=" . $num . "&localno=";
  $num = trim($num);
  $str = file_get_contents($url . $num);
  $search = "results";
  $search = "tapListResultForm:table_2";
  libxml_use_internal_errors(TRUE);
  $doc = new DOMDocument();
  $doc->loadHTML($str);
  if ($doc->getElementById($search)) {
    $divs[] = $doc->getElementById($search);
    // dpm(var_dump($divs));
    if ( count($divs ) ) {
    foreach ( $divs as $div ) {
      $xml = $div->ownerDocument->saveXML($div);
      // $out=str_replace('width="100%"', 'width="620px"' ,$xml);
      // $out=str_replace('class=""', 'class="views-table"' ,$xml);
      $out=_parseTable($xml);
      // dpm($xml);
      //      dpm($out);
      // echo "<pre>". $div->nodeValue."</pre>";
      // echo "<pre>". print_r($out)."</pre>";
      } // end foreach
    } // end if
    libxml_use_internal_errors(FALSE);


    // dpm($out);
    // now lets put the data back in an HTML table
    $output = "More Info at <a href='".$url.$num."' target='_blank'>Canada post</a><br/>";


    $output .= date('l jS \of F Y h:i:s A')."<table width='100%'><thead><tr>\n";

    foreach ($out as $mainkey=>$eventarray) {

    $headers = array_keys ($eventarray);
    $eventvaluesp[] = array_values ($eventarray);
    } //end foreach

    // lets add headers:


    // first defaults:

    $output .= "<th>";
    $output .= "<b>Tracking #</b>";
    $output .= "</th>\n";



    foreach ($headers as $key=>$value) {
    $output .= "<th>";
    $output .= "<b>".$value. "</b>";
    $output .= "</th>\n";
    } //end forech
    $output .= "</tr></thead>\n";

    //now each row of data

    foreach ($eventvaluesp as $key=>$valuearray) {
    $output .= "<tr>";

                    $output .= "<td>";
                    $output .= "<b><a href='".$url.$num."' target='_blank'>".$num. "</a></b>";
                    $output .= "</td>\n";


    foreach ($valuearray as $key=>$data) {
                    $output .= "<td>";
                    $output .= $data ;
                    $output .= "</td>\n";
    } //end foreach
    $output .= "</tr>\n";
    } //end forech

    $output .= "</table>\n";
    $output .= "Something not right?<br/>";
    $output .= "<li>Try <a href='".$usps_url.$num."' target='_blank'>USPS</a>";
    $output .= "<li>Try <a href='".$china_url.$num."' target='_blank'>EMS from china</a>";
    $output .= "<li>Try <a href='".$hongkong_url.$num."' target='_blank'>EMS from HongKong</a>";
    $output .= "<li>Try <a href='".$singapore_url.$num."' target='_blank'>EMS from Singapore</a>";
    $output .= "<li>Try <a href='".$tiawan_url.$num."' target='_blank'>EMS from Tiawan</a>";
    $output .= "<li>Or Try <a href='".$universal_url.$num."' target='_blank'>Universal tracker at trackthepack.com</a>";



    } //end main if
  else {
    $output = "No Data available at Canada Post<br/>";
    $output .= "<li>Try <a href='".$usps_url.$num."' target='_blank'>USPS</a>";
    $output .= "<li>Try <a href='".$china_url.$num."' target='_blank'>EMS from china</a>";
    $output .= "<li>Try <a href='".$hongkong_url.$num."' target='_blank'>EMS from HongKong</a>";
    $output .= "<li>Try <a href='".$singapore_url.$num."' target='_blank'>EMS from Singapore</a>";
    $output .= "<li>Try <a href='".$tiawan_url.$num."' target='_blank'>EMS from Tiawan</a>";
    $output .= "<li>Or Try <a href='".$universal_url.$num."' target='_blank'>Universal tracker at trackthepack.com</a>";
  }
  return ($internal) ? $out : $output;
} //end function




function _parseTable($html) {
  // Find the table

 preg_match("/<table.*?>.*?<\/[\s]*table>/s", $html, $table_html);
/*
 preg_match("/(.*)/s", $html, $table_html);
 */

  // Get title for each row
  /*
  preg_match_all('/(.*?)/s',$table_html[0],$matches);

  */
  //dpm($table_html);

  $table_html[0]=str_replace('<thead>', '' ,$table_html[0]);
  $table_html[0]=str_replace('</thead>', '' ,$table_html[0]);



   /* preg_match_all("/<th.*?>(.*?)<\/[\s]*th>/", $table_html[0], $matches); */
   preg_match_all("/<th.*?>(.*?)<\/[\s]*th>/s", $table_html[0], $matches);
  $row_headers = $matches[1];
   foreach (  $row_headers as $key=>$value) {

        $new_headers[]=strip_tags(html_entity_decode($value));

   } //end foreach

   $row_headers  = $new_headers;
   //dpm($row_headers);
 //dpm($matches);
  // Iterate each row
  preg_match_all("/<tr.*?>(.*?)<\/[\s]*tr>/s", $table_html[0], $matches);

  $table = array();

  foreach($matches[1] as $row_html)
  {
    preg_match_all("/<td.*?>(.*?)<\/[\s]*td>/", $row_html, $td_matches);
    $row = array();
    for($i=0; $i<count($td_matches[1]); $i++)
    {
      $td = strip_tags(html_entity_decode($td_matches[1][$i]));
  //    dpm($td);
      $row[$row_headers[$i]] = $td;
    }

    if(count($row) > 0)
      $table[] = $row;
  }
  return $table;
} // end function


function spydtracker_shiptime($datestring1,$datestring2,$return=FALSE) {

if (isset($datestring1)&& isset($datestring1)) {

    $datetime1 = new DateTime($datestring1);
    $datetime2 = new DateTime($datestring2);

    $days1=$datetime1->format('z');
    $days2=$datetime2->format('z');
   // dpm($days1);
   // dpm($days2);


    $interval = $days1-$days2;
    if ($return) {
        return $interval;
    }// end if
    else {
        echo $interval;
    }

}
    else {
       if ($return) {
        return NULL;
    }// end if
    else {
        echo "No Data";
    }
    }






} //end function



/**
 * This function checks if there is a change to the package status and emails
 * admin if there is. Should be called from hook_cron.
 * @param string $trackingcode
 *   This is the tracking code to use.
 * @param int $nid
 *   This is node id of the node it came from.
 */
function spydtracker_check_cp($trackingcode,$nid) {
  if (strtoupper($trackingcode) == 'NONE') {
    return;
  }
  // get data
  $rootmail = user_load('1')->mail;
  $accountmail = user_load('3')->mail;
  $new_data = spydtracker_track_cp($trackingcode, TRUE);

  // check for exisiting record
  $old_data = variable_get('spydtrack_'.$trackingcode, FALSE);

    // else compare
    if ($old_data == $new_data) {
       $notify_html = spydtracker_track_cp($trackingcode);

      if (strpos($notify_html, 'Item successfully delivered' )>0) {
        $node = node_load($nid);
        $node->field_tracking_status[0]['value'] = 'Arrived';
        node_save($node);
        //dpm($trackingcode . " Marked as arrived");
        watchdog('spydtrack', $trackingcode . " Marked as arrived")
      }
      else {
        //dpm($trackingcode . " No change");
      }

    }
    else {
      //dpm($old_data);
      //dpm($new_data);
      variable_set('spydtrack_'.$trackingcode, $new_data);
      // there has been a change so lets create info for the mail
      $notify_html = spydtracker_track_cp($trackingcode);
      if (strpos($notify_html, 'FORT SMITH' )>0) {
        $notify_html = '<h2>Item is in Fort Smith</h2>' . "\n" . $notify_html;
      }
      if (strpos($notify_html, 'Item successfully delivered' )>0) {
        $notify_html = '<h2>Item successfully delivered</h2>' . "\n" . $notify_html;
        $node = node_load($nid);
        $node->field_tracking_status[0]['value'] = 'Arrived';
        node_save($node);

      }
      $message = array(
        'to' => $accountmail,
        'from' => $rootmail,
        'subject' => '('. $trackingcode .') Your Package Status has changed!',
        'body' => "<html><head></head><body>" . $notify_html . "</body></html>",
        'headers' => array(
          'From' => $rootmail,
          'MIME-Version' => '1.0',
          'Content-Type' => 'text/html;charset=utf-8',),
      );
      $mailresult = drupal_mail_send($message);
      if (!$mailresult===FALSE) {
        //dpm($trackingcode . " changed, mail sent");
        watchdog('spydtrack', $trackingcode . " changed, mail sent")
      }
      else {
        //dpm($trackingcode . " changed, mail failed");
        watchdog('spydtrack', $trackingcode . " changed, mail failed",NULL, WATCHDOG_ERROR);
      }

    }
}



/**
* Implements hook_cron().
*/
function spydtracker_cron() {
  $expires = variable_get('spydtracker_cron_last_run', REQUEST_TIME);
  $scan_results = spydtracker_scan_products(array('cp'));
  variable_set('spydtracker_cron_last_run', REQUEST_TIME);
}

function spydtracker_scan_products($agent){
  foreach ($agent as $key => $value) {
    switch ($value) {
      case 'cp':
        $nids=TRUE;
        $nids = db_query("SELECT nid FROM {node} n WHERE type = 'partsorder'");
        while ($row = db_fetch_object($nids)) {
          $nidlist[] = $row->nid;
        }
        foreach ($nidlist as $nid) {
          $node = node_load($nid);
          if ($node->field_tracking_status[0]['value'] == 'Archived' ||$node->field_tracking_status[0]['value'] == 'Arrived' ) {
            if (!is_null($node->field_track_number[0]['value'])) {
              variable_del('spydtrack_'.$node->field_track_number[0]['value']);
            }

            $cleanup[$nid]=$node;

          }
          else {
            $scan[$nid] = $node;

            spydtracker_check_cp($node->field_track_number[0]['value'], $nid);

          }
        }
       // dpm("cleanup");
       // dpm($cleanup);



       // dpm("scan");
       // dpm($scan);



        break;
    }
  }
}


?>
